#!/bin/bash
##############################################################################
# openprs
# -----------
# Get the openprs for all of a users github repos
#
# :authors: Jess Frazelle, @jessfraz
# :date: 8 June 2015
# :version: 0.0.1
##############################################################################
set -e
set -o pipefail

if [[ -z "$GITHUB_TOKEN" ]]; then
	echo "Set the GITHUB_TOKEN env variable."
	exit 1
fi

URI=https://api.github.com
API_VERSION=v3
API_HEADER="Accept: application/vnd.github.${API_VERSION}+json"
AUTH_HEADER="Authorization: token ${GITHUB_TOKEN}"

DEFAULT_PER_PAGE=20
LAST_PAGE=1
REPO_LAST_PAGE=1

# get the last page from the headers
get_last_page(){
	local header=${1%%" rel=\"last\""*}
	header=${header#*"rel=\"next\""}
	header=${header%%">;"*}
	LAST_PAGE=$(echo "${header#*'&page='}" | bc 2>/dev/null)
}

# get the repo last page from the headers
get_repo_last_page(){
	local header=${1%%" rel=\"last\""*}
	header=${header#*"rel=\"next\""}
	header=${header%%">;"*}
	REPO_LAST_PAGE=$(echo "${header#*'&page='}" | bc 2>/dev/null)
}

get_pulls(){
	local repo=$1
	local page=$2

	# send the request
	local response
	response=$(curl -i -sSL -H "${AUTH_HEADER}" -H "${API_HEADER}" "${URI}/repos/${repo}/pulls?state=open&per_page=${DEFAULT_PER_PAGE}&page=${page}")

	# seperate the headers and body into 2 variables
	local head=true
	local header
	local body
	while read -r line; do
		if $head; then
			if [[ $line = $'\r' ]]; then
				head=false
			else
				header="$header"$'\n'"$line"
			fi
		else
			body="$body"$'\n'"$line"
		fi
	done < <(echo "${response}")

	get_last_page "${header}"

	local length
	length=$(echo "$body" | jq length)

	echo "${repo} has ${length} open PRs"

	if [[ "$length" -gt 0 ]]; then
		local pulls
		pulls=$(echo "$body" | jq --raw-output '.[] | {number: .number, html_url: .html_url, title: .title, body: .body, created_at: .created_at, author: .base.repo.owner.login} | @base64')
		for p in $pulls; do
			pull="$(echo "$p" | base64 --decode)"
			local number
			number=$(echo "$pull" | jq --raw-output '.number')
			local html_url
			html_url=$(echo "$pull" | jq --raw-output '.html_url')
			local title
			title=$(echo "$pull" | jq --raw-output '.title')
			local body
			body=$(echo "$pull" | jq --raw-output '.body')
			local created_at
			created_at=$(echo "$pull" | jq --raw-output '.created_at')
			local author
			author=$(echo "$pull" | jq --raw-output '.author')

			cat <<-EOF

			${repo}#${number}: ${title}
			$(date  -d"${created_at}" +'%A, %B %d, %Y at %r')
			${html_url}

			@${author}: ${body}

			---
			EOF
		done
	else
		return 0
	fi
}

get_repos(){
	local page=$1

	# send the request
	local response
	response=$(curl -i -sSL -H "${AUTH_HEADER}" -H "${API_HEADER}" "${URI}/user/repos?affiliation=owner&per_page=${DEFAULT_PER_PAGE}&page=${page}")

	# seperate the headers and body into 2 variables
	local head=true
	local header
	local body
	while read -r line; do
		if $head; then
			if [[ $line = $'\r' ]]; then
				head=false
			else
				header="$header"$'\n'"$line"
			fi
		else
			body="$body"$'\n'"$line"
		fi
	done < <(echo "${response}")

	get_repo_last_page "${header}"

	local repos
	repos=$(echo "$body" | jq --raw-output '.[].full_name | tostring')

	for repo in $repos; do
		local page=1

		get_pulls "${repo}" "${page}"

		if [ ! -z "$LAST_PAGE" ] && [ "$LAST_PAGE" -ge "$page" ]; then
			for page in  $(seq $((page + 1)) 1 "${LAST_PAGE}"); do
				echo "[debug]: on page ${page} of ${LAST_PAGE}"
				get_pulls "${repo}" "${page}"
			done
		fi
	done
}


main(){
	local page=1

	get_repos "$page"

	if [ ! -z "$REPO_LAST_PAGE" ] && [ "$REPO_LAST_PAGE" -ge "$page" ]; then
		for page in  $(seq $((page + 1)) 1 "${REPO_LAST_PAGE}"); do
			echo "[debug]: on repo page ${page} of ${REPO_LAST_PAGE}"
			get_repos "${page}"
		done
	fi
}

main
